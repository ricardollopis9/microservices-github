version: '3'

services:
  ### MySQL database for Inventory
  db-inventory:
    container_name: db-inventory
    image: mysql:8.0.33
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ms_inventory
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - 3307:3306

  ### MySQL database for Orders
  db-orders:
    container_name: db-orders
    image: mysql:8.0.33
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ms_orders
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - 3308:3306

  ### MySQL database for Products
  db-products:
    container_name: db-products
    image: mysql:8.0.33
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ms_products
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
    ports:
      - 3309:3306

      #Configuracion keycloak mysql
      # MySQL Database for Keycloak
  mysql-keycloak:
    image: mysql:8.0.33
    container_name: mysql-keycloak
    ports:
      - "3366:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: keycloak
      MYSQL_PASSWORD: 1234
    command: --default-authentication-plugin=mysql_native_password

  # Keycloak
  keycloak:
    command: [ "start-dev" ]
    image: quay.io/keycloak/keycloak:22.0.4
    container_name: keycloak
    ports:
      - "8181:8181"
    depends_on:
      - mysql-keycloak
    environment:
      KC_HTTP_PORT: 8181
      KC_HTTPS_PORT: 8182
      KC_DB: mysql
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: 1234
      KC_DB_URL: "jdbc:mysql://mysql-keycloak:3306/keycloak"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  ### Zookeeper
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ### Kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ### Zipkin
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:2.24.2
    ports:
      - "9411:9411"

  ### Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.46.0
    ports:
      - "9090:9090"
    volumes:
      - ./files/prometheus.yml:/etc/prometheus/prometheus.yml

  ### Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:10.0.3
    restart: unless-stopped
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - prometheus
    volumes:
      - ./files/grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    depends_on:
      - prometheus

networks:
  keycloak-and-mysql-network:

volumes:
  keycloak-and-mysql-volume: